/* This file was auto-generated by KreMLin! */
#include "kremlib.h"
#ifndef __Hacl_VRF_Lib_H
#define __Hacl_VRF_Lib_H



#include "testlib.h"

typedef uint64_t Hacl_VRF_Lib_limb;

typedef uint8_t *Hacl_VRF_Lib_word;

typedef uint8_t *Hacl_VRF_Lib_doubleWord;

typedef uint8_t *Hacl_VRF_Lib_scalar;

typedef uint64_t *Hacl_VRF_Lib_felem;

typedef uint64_t *Hacl_VRF_Lib_point;

extern void Hacl_VRF_Lib_point_mult(uint64_t *x0, uint64_t *x1, uint8_t *x2);

extern void Hacl_VRF_Lib_point_add(uint64_t *x0, uint64_t *x1, uint64_t *x2);

extern void Hacl_VRF_Lib_point_double(uint64_t *x0, uint64_t *x1);

extern void Hacl_VRF_Lib_hash(uint8_t *x0, uint32_t x1, uint8_t *x2);

extern void Hacl_VRF_Lib_compress(uint8_t *x0, uint64_t *x1);

extern bool Hacl_VRF_Lib_decompress(uint64_t *x0, uint8_t *x1);

typedef void *Hacl_VRF_Lib_seqelem;

uint64_t *Hacl_VRF_Lib_getx(uint64_t *p);

uint64_t *Hacl_VRF_Lib_gety(uint64_t *p);

uint64_t *Hacl_VRF_Lib_getz(uint64_t *p);

uint64_t *Hacl_VRF_Lib_gett(uint64_t *p);

extern void Hacl_VRF_Lib_make_g(uint64_t *x0);

extern void Hacl_VRF_Lib_fexpand(uint64_t *x0, uint8_t *x1);

extern void Hacl_VRF_Lib_lemma_red_513_is_red_53(void *x0);

extern void Hacl_VRF_Lib_lemma_red_513_is_red_5413(void *x0);

extern void Hacl_VRF_Lib_fdifference_reduced(uint64_t *x0, uint64_t *x1);

extern void Hacl_VRF_Lib_fcontract(uint8_t *x0, uint64_t *x1);

extern void Hacl_VRF_Lib_fmul(uint64_t *x0, uint64_t *x1, uint64_t *x2);
#endif
